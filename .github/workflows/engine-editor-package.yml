name: engine-editor-package

on:
  push:
    branches: [ main ]

jobs:
  # WINDOWS BUILD
  windows-build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v1

      - name: installing vcpkg
        run: |
          cd ..
          git clone https://github.com/Microsoft/vcpkg.git
          cd vcpkg
          .\bootstrap-vcpkg.bat

      - name: run build
        run: |
          cd ${{ github.workspace }}
          cmake -DCMAKE_BUILD_TYPE=Release . -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/../vcpkg/scripts/buildsystems/vcpkg.cmake -DIS_CI_BUILD="true"
          cmake --build . --config Release

      - name: run unit tests
        run: |
          echo "Running seika tests!"
          cd ${{ github.workspace }}
          ${{ github.workspace }}\Release\seika_test.exe
          echo ""
          echo "Running crescent engine tests!"
          ${{ github.workspace }}\Release\crescent_engine_test.exe
          echo ""
          echo "Running crescent engine editor tests!"
          ${{ github.workspace }}\Release\crescent_engine_editor_test.exe

      - name: package dlls (and python zip)
        run: |
          cd ..
          mkdir -p windows_run_dependencies
          copy vcpkg\buildtrees\brotli\x64-windows-rel\brotlicommon.dll windows_run_dependencies\
          copy vcpkg\buildtrees\brotli\x64-windows-rel\brotlidec.dll windows_run_dependencies\
          copy vcpkg\buildtrees\bzip2\x64-windows-rel\bz2.dll windows_run_dependencies\
          copy vcpkg\buildtrees\freetype\x64-windows-rel\freetype.dll windows_run_dependencies\
          copy vcpkg\buildtrees\libpng\x64-windows-rel\libpng16.dll windows_run_dependencies\
          copy vcpkg\packages\python3_x64-windows\bin\python310.dll windows_run_dependencies\
          copy vcpkg\buildtrees\sdl2\x64-windows-rel\SDL2.dll windows_run_dependencies\
          copy vcpkg\buildtrees\zlib\x64-windows-rel\zlib1.dll windows_run_dependencies\
          Invoke-WebRequest -URI "https://www.python.org/ftp/python/3.10.5/python-3.10.5-embed-win32.zip" -OutFile python-3.10.5-embed-win32.zip
          Expand-Archive -Path python-3.10.5-embed-win32.zip -DestinationPath python-310_5_embed
          copy python-310_5_embed\python310.zip windows_run_dependencies\
          Compress-Archive -Path windows_run_dependencies -DestinationPath ${{ github.workspace }}\windows_run_dependencies.zip

      - name: deploy artifacts
        run: |
          python --version
          python -m pip install google-auth google-api-python-client
          cd ${{ github.workspace }}
          echo "${{ secrets.GDRIVE_CREDENTIALS_WINDOWS }}" > creds.json
          python ci\upload_to_gd.py ${{ github.workspace }}\Release\crescent_engine.exe ${{ github.workspace }}\creds.json ${{ secrets.GDRIVE_FOLDER_ID }} crescent_engine_windows.exe
          python ci\upload_to_gd.py ${{ github.workspace }}\Release\crescent_engine_editor.exe ${{ github.workspace }}\creds.json ${{ secrets.GDRIVE_FOLDER_ID }} crescent_engine_editor_windows.exe
          python ci\upload_to_gd.py ${{ github.workspace }}\windows_run_dependencies.zip ${{ github.workspace }}\creds.json ${{ secrets.GDRIVE_FOLDER_ID }}

      - name: print vcpkg dlls
        run: |
          cd ..
          Get-ChildItem -Recurse vcpkg\*.dll

      - name: print vcpkg zips
        run: |
          cd ..
          Get-ChildItem -Recurse vcpkg\*.zip

  # LINUX BUILD
  linux-build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - name: install updates
        run: |
          sudo apt install gcc-11
          sudo apt install g++-11
          wget -O cmake.sh https://cmake.org/files/v3.20/cmake-3.20.1-linux-x86_64.sh
          sudo sh cmake.sh --skip-license --exclude-subdir --prefix=/usr/local
          export PATH=/usr/local/bin:$PATH
          cmake --version

      - name: install vcpkg
        run: |
          cd ..
          git clone https://github.com/Microsoft/vcpkg.git
          cd vcpkg
          ./bootstrap-vcpkg.sh

      - name: run build
        run: |
          cd ${{ github.workspace }}
          cmake -DCMAKE_BUILD_TYPE=Release . -DCMAKE_C_COMPILER=gcc-11 -DCMAKE_CXX_COMPILER=g++-11 -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/../vcpkg/scripts/buildsystems/vcpkg.cmake -DIS_CI_BUILD="true"
          cmake --build . --config Release
          chmod +x crescent_engine
          chmod +x crescent_engine_editor

      - name: run unit tests
        run: |
          cd ${{ github.workspace }}
          echo "Running seika tests!"
          ./seika_test
          echo ""
          echo "Running crescent engine tests!"
          ./crescent_engine_test
          echo ""
          echo "Running crescent engine editor tests!"
          ./crescent_engine_editor_test

      - name: deploy artifacts
        run: |
          python --version
          python -m pip install google-auth google-api-python-client
          cd ${{ github.workspace }}
          echo "${{ secrets.GDRIVE_CREDENTIALS }}" >> creds.json
          touch test.txt
          python ci/upload_to_gd.py ${{ github.workspace }}/crescent_engine ${{ github.workspace }}/creds.json ${{ secrets.GDRIVE_FOLDER_ID }} crescent_engine_linux
          python ci/upload_to_gd.py ${{ github.workspace }}/crescent_engine_editor ${{ github.workspace }}/creds.json ${{ secrets.GDRIVE_FOLDER_ID }} crescent_engine_editor_linux

  # MACOSX BUILD
  macosx-build:
    runs-on: macOS-latest

    steps:
      - uses: actions/checkout@v1

      - name: install vcpkg
        run: |
          cd ..
          git clone https://github.com/Microsoft/vcpkg.git
          cd vcpkg
          ./bootstrap-vcpkg.sh

      - name: run build
        run: |
          cd ${{ github.workspace }}
          cmake -DCMAKE_BUILD_TYPE=Release . -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/../vcpkg/scripts/buildsystems/vcpkg.cmake -DIS_CI_BUILD="true"
          cmake --build . --config Release

      - name: run unit tests
        run: |
          cd ${{ github.workspace }}
          echo "Running seika tests!"
          ./seika_test
          echo ""
          echo "Running crescent engine tests!"
          ./crescent_engine_test

      - name: deploy artifacts
        run: |
          python3 --version
          python3 -m pip install google-auth google-api-python-client
          cd ${{ github.workspace }}
          echo "${{ secrets.GDRIVE_CREDENTIALS }}" >> creds.json
          chmod +x ${{ github.workspace }}/crescent_engine
          python3 ci/upload_to_gd.py ${{ github.workspace }}/crescent_engine ${{ github.workspace }}/creds.json ${{ secrets.GDRIVE_FOLDER_ID }} crescent_engine_macosx

  package-all:
    runs-on: ubuntu-latest
    needs: [windows-build, linux-build, macosx-build]

    steps:
      - uses: actions/checkout@v1

      - name: install pip packages
        run: |
          python3 -m pip install google-auth google-api-python-client

      - name: setup directories
        run: |
          # Windows
          mkdir -p crescent_windows/bin/windows
          mkdir -p crescent_windows/bin/linux
          mkdir -p crescent_windows/bin/macosx
          # Linux
          mkdir -p crescent_linux/bin/windows
          mkdir -p crescent_linux/bin/linux
          mkdir -p crescent_linux/bin/macosx
          # Macosx
          mkdir -p crescent_macosx/bin/windows
          mkdir -p crescent_macosx/bin/linux
          mkdir -p crescent_macosx/bin/macosx

      - name: download dependencies
        run: |
          cd ${{ github.workspace }}
          echo "${{ secrets.GDRIVE_CREDENTIALS }}" >> creds.json
          python ci/download_package_deps.py ${{ github.workspace }}/creds.json

      - name: setup python dependencies
        run: |
          cd ${{ github.workspace }}
          # Linux
          unzip python-3.10.5-embed-linux.zip -d embed_python_linux
          mv embed_python_linux/lib/python3.10/* embed_python_linux/lib
          rm -rf embed_python_linux/lib/python3.10
          # MacOSX
          unzip python-3.10.5-embed-macosx.zip -d embed_python_macosx
          mv embed_python_macosx/lib/python3.10/* embed_python_macosx/lib
          rm -rf embed_python_macosx/lib/python3.10

      - name: build packages
        run: |
          echo "building windows package"
          # Copy engine binaries
          cp crescent_engine_windows.exe crescent_windows/bin/windows/crescent_engine.exe
          cp crescent_engine_linux crescent_windows/bin/linux/crescent_engine
          cp crescent_engine_macosx crescent_windows/bin/macosx/crescent_engine
          cp -r assets crescent_windows/bin/windows
          cp -r test_games crescent_windows/bin/windows
          cp -r assets crescent_windows/bin/linux
          cp -r test_games crescent_windows/bin/linux
          cp -r assets crescent_windows/bin/macosx
          cp -r test_games crescent_windows/bin/macosx
          # Move editor
          mv crescent_engine_editor_windows.exe crescent_windows/crescent.exe
          # Copy windows runtime deps
          unzip windows_run_dependencies.zip
          cp windows_run_dependencies/*  crescent_windows/
          cp windows_run_dependencies/*  crescent_windows/bin/windows/
          cp -r embed_python_linux crescent_windows/bin/linux/embed_python
          cp -r embed_python_macosx crescent_windows/bin/macosx/embed_python
          zip -r crescent_windows.zip crescent_windows/

          echo "building linux package"
          # Copy engine binaries
          cp crescent_engine_windows.exe crescent_linux/bin/windows/crescent_engine.exe
          cp crescent_engine_linux crescent_linux/bin/linux/crescent_engine
          cp crescent_engine_macosx crescent_linux/bin/macosx/crescent_engine
          cp -r assets crescent_linux/bin/windows
          cp -r test_games crescent_linux/bin/windows
          cp -r assets crescent_linux/bin/linux
          cp -r test_games crescent_linux/bin/linux
          cp -r assets crescent_linux/bin/macosx
          cp -r test_games crescent_linux/bin/macosx
          # Move editor
          mv crescent_engine_editor_linux crescent_linux/crescent
          # Copy windows runtime deps
          cp windows_run_dependencies/*  crescent_linux/bin/windows/
          cp -r embed_python_linux crescent_linux/bin/linux/embed_python
          cp -r embed_python_macosx crescent_linux/bin/macosx/embed_python
          zip -r crescent_linux.zip crescent_linux/

          echo "building macosx package"
          # Copy engine binaries
          cp crescent_engine_windows.exe crescent_macosx/bin/windows/crescent_engine.exe
          cp crescent_engine_linux crescent_macosx/bin/linux/crescent_engine
          cp crescent_engine_macosx crescent_macosx/bin/macosx/crescent_engine
          cp -r assets crescent_macosx/bin/windows
          cp -r test_games crescent_macosx/bin/windows
          cp -r assets crescent_macosx/bin/linux
          cp -r test_games crescent_macosx/bin/linux
          cp -r assets crescent_macosx/bin/macosx
          cp -r test_games crescent_macosx/bin/macosx
          # Copy windows runtime deps
          cp windows_run_dependencies/*  crescent_macosx/bin/windows/
          cp -r embed_python_linux crescent_macosx/bin/linux/embed_python
          cp -r embed_python_macosx crescent_macosx/bin/macosx/embed_python
          zip -r crescent_macosx.zip crescent_macosx/
          
      - name: deploy packages
        run: |
          echo "deploying windows package"
          python ci/upload_to_gd.py crescent_windows.zip ${{ github.workspace }}/creds.json ${{ secrets.GDRIVE_FOLDER_ID }}
          echo "deploying linux package"
          python ci/upload_to_gd.py crescent_linux.zip ${{ github.workspace }}/creds.json ${{ secrets.GDRIVE_FOLDER_ID }}
          echo "deploying macosx package"
          python ci/upload_to_gd.py crescent_macosx.zip ${{ github.workspace }}/creds.json ${{ secrets.GDRIVE_FOLDER_ID }}
