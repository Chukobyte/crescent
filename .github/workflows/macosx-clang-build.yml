name: macosx-clang-build

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ main ]

env:
  LC_ALL: en_US.UTF-8
  LANG: en_US.UTF-8

jobs:
  build:
    runs-on: macOS-latest

    steps:
      - uses: actions/checkout@v1

      - name: Sign app
        run: |
          echo "${{ secrets.MAC_CERT_KEY }}" >> cert.txt
          echo "${{ secrets.MAC_PKEY }}" >> pkey.txt
          base64 -D -i cert.txt -o cert.cer
          base64 -D -i pkey.txt -o pkey.p12
          security create-keychain -p '${{ secrets.MAC_KEYCHAIN_PASS }}' build.keychain
          security add-trusted-cert -d -r trustRoot -k build.keychain -P '${{ secrets.MAC_KEYCHAIN_PASS }}' cert.cer
          security import pkey.p12 -k build.keychain -P '${{ secrets.MAC_KEYCHAIN_PASS }}'
          security unlock-keychain -p '${{ secrets.MAC_KEYCHAIN_PASS }}' build.keychain
          security find-identity -p codesigning -v
          codesign --deep -s "${{ secrets.MAC_SIGNING_ID }}" --keychain build.keychain .

#      - name: installing vcpkg
#        run: |
#          cd ..
#          git clone https://github.com/Microsoft/vcpkg.git
#          cd vcpkg
#          ./bootstrap-vcpkg.sh
#
#      - name: install dependencies
#        run: |
#          brew install pkg-config
#
#      - name: run build
#        run: |
#          cd ${{ github.workspace }}
#          cmake . -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/../vcpkg/scripts/buildsystems/vcpkg.cmake -DIS_CI_BUILD="true"
#          cmake --build .
#
#      - name: run unit tests
#        run: |
#          cd ${{ github.workspace }}
#          echo "Running seika tests!"
#          ./seika_test
#          echo ""
#          echo "Running crescent engine tests!"
#          ./crescent_engine_test
